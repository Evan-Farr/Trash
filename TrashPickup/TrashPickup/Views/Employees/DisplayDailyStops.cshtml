@model IEnumerable<TrashPickup.Models.Customer>

@{
    ViewBag.Title = "DisplayDailyStops";
}

<h2>Today's Pickups</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.StreetAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ZipCode)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StreetAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ZipCode)
            </td>
            <td>
                @Html.ActionLink("View on Map", "", "") |
            </td>
        </tr>
    }
    <tr>
        <td>
            @Html.ActionLink("Back", "Index", "Users") |
        </td>
    </tr>
</table>
<hr />

<div id="map"></div>
<script>
      var geocoder;
      var map;
      //var directionsDisplay = new google.maps.DirectionsRenderer();
      //var directionsService = new google.maps.DirectionsService();
      //var infoWindow = new google.maps.InfoWindow({
      //    size: new google.maps.Size(150, 50)
      //});
      var pickups = @Html.Raw(Json.Encode(Model));
      function initMap() {
          geocoder = new google.maps.Geocoder();
          var latlng = new google.maps.LatLng(43.0389, -87.9065);
          var mapOptions = {
              center: latlng,
              zoom: 13,
              mapTypeId: google.maps.MapTypeId.ROADMAP
          };
          map = new google.maps.Map(document.getElementById("map"), mapOptions);
          codeAddress();
          //map.addEventListener('click', function() {
          //    map.setZoom(15);
          //    map.setCenter(marker.getPosition());
          //});
      }

    function codeAddress() {
        for(var i = 0; i < pickups.length; i++){
            var address = pickups[i].StreetAddress + " " + pickups[i].City + " " + pickups[i].State + " " + pickups[i].ZipCode;
            geocoder.geocode( { 'address': address}, function(results, status) {
                if (status == 'OK') {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location,
                        animation: google.maps.Animation.DROP
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }
    }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBfmcqeeLL7DKbqLtpyfSTphE-21OOr5D0&callback=initMap"></script>



