@model TrashPickup.Models.Customer

@{
    ViewBag.Title = "ViewBalance";
}

<h2>Paying your balance is easy with PayPal!</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <h4>Current Balance</h4>
        <h6>If nothing is shown, you do not owe anything at this time!</h6>
        <dd>
            <p>$ @Html.DisplayFor(model => model.MoneyOwed)</p>
        </dd>
        <br><hr />
        <div class="col-md-10">
            @Html.HiddenFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-10">
            @Html.HiddenFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-10">
            @Html.HiddenFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-10">
            @Html.HiddenFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-10">
            @Html.HiddenFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-10">
            @Html.HiddenFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-10">
            @Html.HiddenFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-10">
            @Html.HiddenFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-10">
            @Html.HiddenFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-10">
            @Html.HiddenFor(model => model.MoneyOwed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MoneyOwed, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-10">
            @Html.HiddenFor(model => model.NextScheduledPickUp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NextScheduledPickUp, "", new { @class = "text-danger" })
        </div>
        <br />

            
        <div class="form-group">
            <div class="col-md-offset-1">
                <p><a class="btn btn-default" href="https://www.paypal.com/us/home">Pay with PayPal! &raquo;</a></p>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back", "Index", "Users")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

